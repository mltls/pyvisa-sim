import os

from pyvisa.testsuite import BaseTestCase
import visa

PACKAGE = os.path.dirname(__file__)


class TestChannels(BaseTestCase):

    @classmethod
    def setUpClass(cls):
        path = os.path.join(PACKAGE, 'binary_instrument.yaml')
        cls.rm = visa.ResourceManager(path + '@sim')
        resource_name = cls.rm.list_resources()[0]
        cls.inst = cls.rm.open_resource(resource_name, read_termination='\n',
                                        write_termination='\n')

    def test_binary(self):
        r = self.inst.query('BIN?')
        ans = "\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00\x00\x00j\x00"
        self.assertEqual(ans, r)

    def test_idn(self):
        r = self.inst.query('*IDN?')
        self.assertEqual(r, "binary instrument simulation, 1337, 0.0.01")
